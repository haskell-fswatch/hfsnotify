name: CI

on:
  pull_request:
  push:
    branches: [master]

jobs:
  cabal:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        cabal: ["3.2"]
        ghc:
          - "8.6.5"
          - "8.8.4"
          - "8.10.7"
          - "9.0.2"
          - "9.2.4"
        include:
          - os: ubuntu-latest
            ghc: "9.8"
          - os: ubuntu-latest
            ghc: "9.10"
        exclude:
          - os: macOS-latest
            ghc: 8.8.4
          - os: macOS-latest
            ghc: 8.6.5
          - os: windows-latest
            ghc: 8.8.4
          - os: windows-latest
            ghc: 8.6.5

    steps:
    - uses: actions/checkout@v2
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: haskell/actions/setup@v1
      id: setup-haskell-cabal
      name: Setup Haskell (Cabal)
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - name: Freeze
      run: |
        cabal freeze

    - uses: actions/cache@v1
      name: Cache ~/.cabal/store
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}

    - name: Build
      run: |
        cabal configure --enable-tests --enable-benchmarks --test-show-details=direct
        cabal build all

    - name: Test
      run: |
        cabal test

  stack:
    name: stack ${{ matrix.stack }} / ${{ matrix.os }} / resolver ${{ matrix.resolver }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        stack: ["2.7.5"]
        resolver:
          - lts-14 # 8.6.5
          - lts-16 # 8.8.4
          - lts-18 # 8.10.7
          - lts-19 # 9.0.2
        exclude:
          # GHC bug on this version causes the build to fail ("Access violation in generated code when writing 0x0")
          - os: windows-latest
            resolver: lts-15

    steps:
    - uses: actions/checkout@v2
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: haskell/actions/setup@v1
      name: Setup Haskell (Stack)
      with:
        enable-stack: true
        stack-no-global: true
        stack-version: ${{ matrix.stack }}

    - name: Run stack setup
      shell: bash
      run: |
        stack setup --resolver ${{matrix.resolver}}

        # Certain resolvers need dedicated stack.yaml files
        STACK_EXTRA_ARGS="--resolver ${{matrix.resolver}}"
        [ "${{matrix.resolver}}" = "lts-14" ] && STACK_EXTRA_ARGS="--stack-yaml stack-lts14.yaml"
        [ "${{matrix.resolver}}" = "lts-15" ] && STACK_EXTRA_ARGS="--stack-yaml stack-lts15.yaml"
        [ "${{matrix.resolver}}" = "lts-16" ] && STACK_EXTRA_ARGS="--stack-yaml stack-lts16.yaml"

        echo STACK_EXTRA_ARGS="$STACK_EXTRA_ARGS" >> $GITHUB_ENV

    - uses: actions/cache@v1
      name: Cache ~/.stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-${{ matrix.resolver }}-stack-${{ matrix.stack }}-key2

    - name: Build
      run: |
        stack build $STACK_EXTRA_ARGS --test --bench --no-run-tests --no-run-benchmarks

    - name: Test
      run: |
        stack test $STACK_EXTRA_ARGS
